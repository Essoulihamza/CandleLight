type Query {
#    User queries
   users: [User]
   userById(userName: ID!): User
   usersLike(userName: ID!): [User]!

#    Post queries
   posts: [Post]
   postsByUser(userName: String!): [Post]!
   postsTitleLike(title: String!): [Post]!
}

type Mutation {
    signUp(newUser: UserSignUpInput) : User!
}

input UserSignUpInput {
    userName: String!
    email: String!
    phoneNumber: String!
    password: String!
}

type User {
    userName: ID!
    email: String!
    phoneNumber: String!
    joinedAt: LocalDate!
}

type Post {
    id: ID!
    title: String!
    content: String!
    media: [Media!]
    publisher: User!
    createdAt: LocalDateTime!
    reactions: [PostReaction]
    comments: [Comment!]
}

type Comment {
    id: ID!
    content: String!
    publisher: User!
    publishedAt: LocalDateTime!
}

type PostReaction {
    id: ID!
    post: Post!
    publisher: User!
    type: ReactionType!
}

type CommentReaction {
    id: ID!
    comment: Comment!
    publisher: User!
    type: ReactionType!
}

type Media {
    id: ID!
    post: Post!
    type: MediaType!
}

enum ReactionType {
    FLAME
    SUPPORT
    WOW
}

enum MediaType {
    IMAGE
    VIDEO
}

scalar LocalDate
scalar LocalDateTime